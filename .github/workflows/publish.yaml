name: Publish

on:
  push:
    branches:
      # note: only for dev branch since we need to release packages only once
      - dev

permissions: write-all

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: "Run PR preparation steps"
        uses: ./.github/actions/pr-preparation

      - name: "Version and publish"
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

          # To deploy the application with the latest changes, packages versions must be up to date.
          npx lerna version --conventional-commits --no-push --no-changelog --yes
          npx lerna publish from-git --yes

      - name: "Update package.json with latest library version"
        run: |
          # To deploy the application with the latest changes, packages versions must be up to date.
          package_names=("date-renderer" "date-logic") # List of package names to update
          
          # To deploy the application with the latest changes, packages versions must be up to date.
          for pkg in "${package_names[@]}"; do
            latest_version=$(npm view "@zidabah/$pkg" version)
            jq --arg latest_version "$latest_version" ".dependencies[\"@zidabah/$pkg\"] = \$latest_version" package.json > package.json.tmp
            mv package.json.tmp package.json
          done

      - name: "Commit and push changes"
        run: |
          # To deploy the application with the latest changes, packages versions must be up to date.
          git add package.json
          git commit --amend -m "Update libraries to the latest version"
          git push
          git push --tags